find_path(tbb_INCLUDE_DIR tbb/tbb.h)

find_file(tbb_stddef_h NAMES tbb_stddef.h PATH_SUFFIXES tbb)
if(EXISTS ${tbb_stddef_h})
   file(STRINGS "${tbb_stddef_h}" TBB_VERSION_MAJOR REGEX "^#.*define TBB_VERSION_MAJOR +[0-9]+.*$")
   string(REGEX REPLACE "^.*TBB_VERSION_MAJOR +([0-9]+).*$" "\\1" TBB_VERSION_MAJOR "${TBB_VERSION_MAJOR}")
   file(STRINGS "${tbb_stddef_h}" TBB_VERSION_MINOR REGEX "^#.*define TBB_VERSION_MINOR +[0-9]+.*$")
   string(REGEX REPLACE "^.*TBB_VERSION_MINOR +([0-9]+).*$" "\\1" TBB_VERSION_MINOR "${TBB_VERSION_MINOR}")
   file(STRINGS "${tbb_stddef_h}" TBB_INTERFACE_VERSION REGEX "^#.*define TBB_INTERFACE_VERSION +[0-9]+.*$")
   string(REGEX REPLACE "^.*TBB_INTERFACE_VERSION +([0-9]+).*$" "\\1" TBB_INTERFACE_VERSION "${TBB_INTERFACE_VERSION}")
   file(STRINGS "${tbb_stddef_h}" TBB_COMPATIBLE_INTERFACE_VERSION REGEX "^#.*define TBB_COMPATIBLE_INTERFACE_VERSION +[0-9]+.*$")
   string(REGEX REPLACE "^.*TBB_COMPATIBLE_INTERFACE_VERSION +([0-9]+).*$" "\\1" TBB_COMPATIBLE_INTERFACE_VERSION "${TBB_COMPATIBLE_INTERFACE_VERSION}")
   set(TBB_VERSION_STRING "${TBB_VERSION_MAJOR}.${TBB_VERSION_MINOR}")
   message(STATUS "Found TBB (version ${TBB_VERSION_STRING} interface version ${TBB_COMPATIBLE_INTERFACE_VERSION})")
endif()

find_library(tbb_LIBRARY_RELEASE NAMES tbb)
find_library(tbb_LIBRARY_DEBUG NAMES tbbd)
find_library(tbbmalloc_LIBRARY_RELEASE NAMES tbbmalloc)
find_library(tbbmalloc_LIBRARY_DEBUG NAMES tbbmallocd)

include(SelectLibraryConfigurations)
select_library_configurations(tbb)
select_library_configurations(tbbmalloc)

set(TBB_INCLUDE_DIRS ${TBB_INCLUDE_DIR})
mark_as_advanced(TBB_INCLUDE_DIR)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(TBB REQUIRED_VARS tbb_INCLUDE_DIR tbb_LIBRARY tbbmalloc_LIBRARY)
set(TBB_LIBRARIES "${tbb_LIBRARY};${tbbmalloc_LIBRARY}")
set(TBB_INCLUDE_DIRS "${tbb_INCLUDE_DIR}")
# message(STATUS "TBB_INCLUDE_DIR: ${TBB_INCLUDE_DIR}")
message(STATUS "TBB_LIBRARIES: ${TBB_LIBRARIES}")
set(tbb_FOUND ${TBB_FOUND})
